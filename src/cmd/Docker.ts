import {DockerUtil} from "../util/DockerUtil";
import {Log} from "../util/Log";

export class Docker {

    static parse(args: Array<string>) {
        if (['-h', '--help', 'help'].indexOf(args[0]) >= 0) {
            return Docker.help();
        }
        let command = args.shift();
        switch (command) {
            case 'clean':
                DockerUtil.cleanup();
                break;
            case  'ps':
                DockerUtil.ps(args[0]);
                break;
            case  'up':
                DockerUtil.up(args[0]);
                break;
            case  'down':
                DockerUtil.down(args[0]);
                break;
            case  'scale':
                if (args.length == 1) {
                    if (isNaN(+args[0])) {
                        DockerUtil.scale(args[0]);
                    } else {
                        DockerUtil.scale('', +args[0]);
                    }
                } else {
                    DockerUtil.scale(args[0], +args[1]);
                }
                break;
            default:
                process.stderr.write(`vesta docker: invalid command '${command}'.\nSee 'vesta docker --help'\n`);
        }
    }

    static help() {
        Log.write(`
Usage: vesta docker COMMAND [options...] [PATH]

Manage docker relevant operations

Commands:
    clean   Removes all orphan volumes and networks. And also images without name
    ps      Displays the relevant containers info of specified PATH
    up      Executes 'docker compose up -d' on the path specified by PATH.
            The PATH is the name of the file generated by 'vesta deploy'.
            If no PATH is mentioned, vesta will look for 'docker-compose.yml' file
    down    Executes 'docker compose down' on the path specified by PATH
    scale   Executes 'docker compose scale' on the path specified by PATH.
            This command will only scale the 'api' container of the specific project. Then vesta will obtain
             the new container's ip and port and updates the upstream section of nginx configuration file.
             You still need to restart the nginx service manually for the changes to take effect
    
Example:
    vesta docker up deployedProjectName.json
        Executes 'docker-compose up -d' in the docker-compose.yml file path  
    vesta scale 5 deployedProjectName.json
        Executes 'docker-compose scale api=5' in the docker-compose.yml file path and updates the nginx config file
    vesta scale deployedProjectName.json
        This will return the number of api containers
`);
    }
}