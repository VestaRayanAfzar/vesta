import { Culture } from "@vesta/culture";
import { existsSync } from "fs";
import { Backuper } from "../deploy/Backuper";
import { IDeployConfig } from "../deploy/Deployer";
import { ArgParser } from "../util/ArgParser";
import { readJsonFile, writeFile } from "../util/FsUtil";
import { Log } from "../util/Log";

export class Backup {

    public static help() {
        Log.write(`
Usage: vesta backup <PATH>

Backup all storage data into a single tar file

    PATH    The json file path that was generated by the previous 'vesta deploy ...'
`);
    }

    public static init() {
        const argParser = ArgParser.getInstance();
        if (argParser.hasHelp()) {
            return Backup.help();
        }
        const fileName = argParser.get();
        if (existsSync(fileName)) {
            const prevDeployConfig = readJsonFile<IDeployConfig>(fileName);
            (new Backuper(prevDeployConfig)).backup();
            const date = Culture.getDateTimeInstance();
            prevDeployConfig.history.push({ date: date.format("Y/m/d H:i:s"), type: "backup" });
            writeFile(fileName, JSON.stringify(prevDeployConfig, null, 2));
        } else {
            Log.error(`Deploy config file not found: ${fileName}`);
        }
    }
}
