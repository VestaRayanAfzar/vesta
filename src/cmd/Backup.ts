import {Log} from "../util/Log";
import {ArgParser} from "../util/ArgParser";
import * as fs from "fs";
import {Backuper} from "../deploy/Backuper";
import {GregorianDate} from "@vesta/culture-us";
import {IDeployConfig} from "../deploy/Deployer";
import {readJsonFile, writeFile} from "../util/FsUtil";

export class Backup {

    static init() {
        const argParser = ArgParser.getInstance();
        if (argParser.hasHelp()) {
            return Backup.help();
        }
        let fileName = argParser.get();
        if (fs.existsSync(fileName)) {
            let prevDeployConfig = readJsonFile<IDeployConfig>(fileName);
            (new Backuper(prevDeployConfig)).backup();
            let date = new GregorianDate();
            prevDeployConfig.history.push({date: date.format('Y/m/d H:i:s'), type: 'backup'});
            writeFile(fileName, JSON.stringify(prevDeployConfig, null, 2));
        } else {
            Log.error(`Deploy config file not found: ${fileName}`);
        }
    }

    static help() {
        Log.write(`
Usage: vesta backup <PATH>

Backup all storage data into a single tar file

    PATH    The json file path that was generated by the previous 'vesta deploy ...'
`);
    }
}